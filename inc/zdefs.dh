//-----------------------------------------------------------------------------
//
// Definitions compatible with zdefs.acs.
//
//-----------------------------------------------------------------------------

#ifndef __HEADER__ZDEFS_DH__
#define __HEADER__ZDEFS_DH__ #

#include "zspawnid.dh"


//----------------------------------------------------------------------------|
// Global Variables                                                           |
//

constexpr bool TRUE  = true;
constexpr bool FALSE = false;
constexpr bool ON    = true;
constexpr bool OFF   = false;
constexpr bool YES   = true;
constexpr bool NO    = false;

constexpr int LINE_FRONT = 0;
constexpr int LINE_BACK  = 1;

constexpr int SIDE_FRONT = 0;
constexpr int SIDE_BACK  = 1;

// Line texture select.
constexpr int TEXTURE_TOP    = 0;
constexpr int TEXTURE_MIDDLE = 1;
constexpr int TEXTURE_BOTTOM = 2;

// Line texture select flags.
constexpr int TEXFLAG_TOP       = 1;
constexpr int TEXFLAG_MIDDLE    = 2;
constexpr int TEXFLAG_BOTTOM    = 4;
constexpr int TEXFLAG_ADDOFFSET = 8;

constexpr int GAME_SINGLE_PLAYER   = 0;
constexpr int GAME_NET_COOPERATIVE = 1;
constexpr int GAME_NET_DEATHMATCH  = 2;
constexpr int GAME_TITLE_MAP       = 3;

// Classes are only useful with Hexen.
constexpr int CLASS_FIGHTER = 0;
constexpr int CLASS_CLERIC  = 1;
constexpr int CLASS_MAGE    = 2;

constexpr int SKILL_VERY_EASY = 0;
constexpr int SKILL_EASY      = 1;
constexpr int SKILL_NORMAL    = 2;
constexpr int SKILL_HARD      = 3;
constexpr int SKILL_VERY_HARD = 4;

constexpr int BLOCK_NOTHING    = 0;
constexpr int BLOCK_CREATURES  = 1;
constexpr int BLOCK_EVERYTHING = 2;
constexpr int BLOCK_RAILING    = 3;
constexpr int BLOCK_PLAYERS    = 4;

constexpr int SCROLL           = 0;
constexpr int CARRY            = 1;
constexpr int SCROLL_AND_CARRY = 2;

// Means-of-death for Sector_SetDamage.
constexpr int MOD_UNKNOWN      =  0;
constexpr int MOD_ROCKET       =  5;
constexpr int MOD_R_SPLASH     =  6;
constexpr int MOD_PLASMARIFLE  =  7;
constexpr int MOD_BFG_BOOM     =  8;
constexpr int MOD_BFG_SPLASH   =  9;
constexpr int MOD_CHAINSAW     = 10;
constexpr int MOD_SSHOTGUN     = 11;
constexpr int MOD_WATER        = 12;
constexpr int MOD_SLIME        = 13;
constexpr int MOD_LAVA         = 14;
constexpr int MOD_CRUSH        = 15;
constexpr int MOD_TELEFRAG     = 16;
constexpr int MOD_FALLING      = 17;
constexpr int MOD_SUICIDE      = 18;
constexpr int MOD_BARREL       = 19;
constexpr int MOD_EXIT         = 20;
constexpr int MOD_SPLASH       = 21;
constexpr int MOD_HIT          = 22;
constexpr int MOD_RAILGUN      = 23;
constexpr int MOD_ICE          = 24;
constexpr int MOD_DISINTEGRATE = 25;
constexpr int MOD_POISON       = 26;
constexpr int MOD_ELECTRIC     = 27;

// Return values for PlayMovie.
constexpr int MOVIE_Played         =  0;
constexpr int MOVIE_Played_NoVideo =  1;
constexpr int MOVIE_Played_Aborted =  2;
constexpr int MOVIE_Failed         = -1;

// Player properties.
constexpr int PROP_FROZEN              =  0;
constexpr int PROP_NOTARGET            =  1;
constexpr int PROP_INSTANTWEAPONSWITCH =  2;
constexpr int PROP_FLY                 =  3;
constexpr int PROP_TOTALLYFROZEN       =  4;
constexpr int PROP_INVULNERABILITY     =  5;
constexpr int PROP_STRENGTH            =  6;
constexpr int PROP_INVISIBILITY        =  7;
constexpr int PROP_RADIATIONSUIT       =  8;
constexpr int PROP_ALLMAP              =  9;
constexpr int PROP_INFRARED            = 10;
constexpr int PROP_WEAPONLEVEL2        = 11;
constexpr int PROP_FLIGHT              = 12;
constexpr int PROP_SPEED               = 15;
constexpr int PROP_BUDDHA              = 16;

// Player input.
constexpr int INPUT_OLDBUTTONS     =  0;
constexpr int INPUT_BUTTONS        =  1;
constexpr int INPUT_PITCH          =  2;
constexpr int INPUT_YAW            =  3;
constexpr int INPUT_ROLL           =  4;
constexpr int INPUT_FORWARDMOVE    =  5;
constexpr int INPUT_SIDEMOVE       =  6;
constexpr int INPUT_UPMOVE         =  7;
constexpr int MODINPUT_OLDBUTTONS  =  8;
constexpr int MODINPUT_BUTTONS     =  9;
constexpr int MODINPUT_PITCH       = 10;
constexpr int MODINPUT_YAW         = 11;
constexpr int MODINPUT_ROLL        = 12;
constexpr int MODINPUT_FORWARDMOVE = 13;
constexpr int MODINPUT_SIDEMOVE    = 14;
constexpr int MODINPUT_UPMOVE      = 15;

// Player buttons.
constexpr int BT_ATTACK     = 0x00000001;
constexpr int BT_USE        = 0x00000002;
constexpr int BT_JUMP       = 0x00000004;
constexpr int BT_CROUCH     = 0x00000008;
constexpr int BT_TURN180    = 0x00000010;
constexpr int BT_ALTATTACK  = 0x00000020;
constexpr int BT_RELOAD     = 0x00000040;
constexpr int BT_ZOOM       = 0x00000080;
constexpr int BT_SPEED      = 0x00000100;
constexpr int BT_STRAFE     = 0x00000200;
constexpr int BT_MOVERIGHT  = 0x00000400;
constexpr int BT_MOVELEFT   = 0x00000800;
constexpr int BT_BACK       = 0x00001000;
constexpr int BT_FORWARD    = 0x00002000;
constexpr int BT_RIGHT      = 0x00004000;
constexpr int BT_LEFT       = 0x00008000;
constexpr int BT_LOOKUP     = 0x00010000;
constexpr int BT_LOOKDOWN   = 0x00020000;
constexpr int BT_MOVEUP     = 0x00040000;
constexpr int BT_MOVEDOWN   = 0x00080000;
constexpr int BT_SHOWSCORES = 0x00100000;
constexpr int BT_USER1      = 0x00200000;
constexpr int BT_USER2      = 0x00400000;
constexpr int BT_USER3      = 0x00800000;
constexpr int BT_USER4      = 0x01000000;

// Text colors.
constexpr int CR_UNTRANSLATED = -1;
constexpr int CR_BRICK        =  0;
constexpr int CR_TAN          =  1;
constexpr int CR_GRAY         =  2;
constexpr int CR_GREY         =  2;
constexpr int CR_GREEN        =  3;
constexpr int CR_BROWN        =  4;
constexpr int CR_GOLD         =  5;
constexpr int CR_RED          =  6;
constexpr int CR_BLUE         =  7;
constexpr int CR_ORANGE       =  8;
constexpr int CR_WHITE        =  9;
constexpr int CR_YELLOW       = 10;
constexpr int CR_BLACK        = 12;
constexpr int CR_LIGHTBLUE    = 13;
constexpr int CR_CREAM        = 14;
constexpr int CR_OLIVE        = 15;
constexpr int CR_DARKGREEN    = 16;
constexpr int CR_DARKRED      = 17;
constexpr int CR_DARKBROWN    = 18;
constexpr int CR_PURPLE       = 19;
constexpr int CR_DARKGRAY     = 20;
constexpr int CR_DARKGREY     = 20;

// HUD message types.
constexpr int HUDMSG_PLAIN       = 0;
constexpr int HUDMSG_FADEOUT     = 1;
constexpr int HUDMSG_TYPEON      = 2;
constexpr int HUDMSG_FADEINOUT   = 3;
constexpr int HUDMSG_COLORSTRING = 0x40000000;
constexpr int HUDMSG_LOG         = 0x80000000;

// "Scripted" Marine weapon types.
constexpr int MARINEWEAPON_Dummy          =  0;
constexpr int MARINEWEAPON_Fist           =  1;
constexpr int MARINEWEAPON_BerserkFist    =  2;
constexpr int MARINEWEAPON_Chainsaw       =  3;
constexpr int MARINEWEAPON_Pistol         =  4;
constexpr int MARINEWEAPON_Shotgun        =  5;
constexpr int MARINEWEAPON_SuperShotgun   =  6;
constexpr int MARINEWEAPON_Chaingun       =  7;
constexpr int MARINEWEAPON_RocketLauncher =  8;
constexpr int MARINEWEAPON_PlasmaRifle    =  9;
constexpr int MARINEWEAPON_Railgun        = 10;
constexpr int MARINEWEAPON_BFG            = 11;

// Actor properties.
constexpr int APROP_Health       =  0;
constexpr int APROP_Speed        =  1;
constexpr int APROP_Damage       =  2;
constexpr int APROP_Alpha        =  3;
constexpr int APROP_RenderStyle  =  4;
constexpr int APROP_SeeSound     =  5;
constexpr int APROP_AttackSound  =  6;
constexpr int APROP_PainSound    =  7;
constexpr int APROP_DeathSound   =  8;
constexpr int APROP_ActiveSound  =  9;
constexpr int APROP_Ambush       = 10;
constexpr int APROP_Invulnerable = 11;
constexpr int APROP_JumpZ        = 12;
constexpr int APROP_ChaseGoal    = 13;
constexpr int APROP_Frightened   = 14;
constexpr int APROP_Gravity      = 15;
constexpr int APROP_Friendly     = 16;
constexpr int APROP_SpawnHealth  = 17;
constexpr int APROP_Dropped      = 18;
constexpr int APROP_Notarget     = 19;
constexpr int APROP_Species      = 20;
constexpr int APROP_Nametag      = 21;
constexpr int APROP_Score        = 22;
constexpr int APROP_Notrigger    = 23;
constexpr int APROP_DamageFactor = 24;
constexpr int APROP_MasterTID    = 25;
constexpr int APROP_TargetTID    = 26;
constexpr int APROP_TracerTID    = 27;
constexpr int APROP_Waterlevel   = 28;
constexpr int APROP_ScaleX       = 29;
constexpr int APROP_ScaleY       = 30;
constexpr int APROP_Dormant      = 31;
constexpr int APROP_Mass         = 32;
constexpr int APROP_Accuracy     = 33;
constexpr int APROP_Stamina      = 34;

// Render styles.
constexpr int STYLE_None        =  0;
constexpr int STYLE_Normal      =  1;
constexpr int STYLE_Fuzzy       =  2;
constexpr int STYLE_SoulTrans   =  3;
constexpr int STYLE_OptFuzzy    =  4;
constexpr int STYLE_Translucent = 64;
constexpr int STYLE_Add         = 65;

// Properties you can use with GetLevelInfo().
constexpr int LEVELINFO_PAR_TIME        = 0;
constexpr int LEVELINFO_CLUSTERNUM      = 1;
constexpr int LEVELINFO_LEVELNUM        = 2;
constexpr int LEVELINFO_TOTAL_SECRETS   = 3;
constexpr int LEVELINFO_FOUND_SECRETS   = 4;
constexpr int LEVELINFO_TOTAL_ITEMS     = 5;
constexpr int LEVELINFO_FOUND_ITEMS     = 6;
constexpr int LEVELINFO_TOTAL_MONSTERS  = 7;
constexpr int LEVELINFO_KILLED_MONSTERS = 8;
constexpr int LEVELINFO_SUCK_TIME       = 9;

// Properties you can use with GetPlayerInfo().
constexpr int PLAYERINFO_TEAM        = 0;
constexpr int PLAYERINFO_AIMDIST     = 1;
constexpr int PLAYERINFO_COLOR       = 2;
constexpr int PLAYERINFO_GENDER      = 3;
constexpr int PLAYERINFO_NEVERSWITCH = 4;
constexpr int PLAYERINFO_MOVEBOB     = 5;
constexpr int PLAYERINFO_STILLBOB    = 6;
constexpr int PLAYERINFO_PLAYERCLASS = 7;

// Flags for ReplaceTextures.
constexpr int NOT_BOTTOM  =  1;
constexpr int NOT_MIDDLE  =  2;
constexpr int NOT_TOP     =  4;
constexpr int NOT_FLOOR   =  8;
constexpr int NOT_CEILING = 16;

// Flags for SectorDamage.
constexpr int DAMAGE_PLAYERS            = 1;
constexpr int DAMAGE_NONPLAYERS         = 2;
constexpr int DAMAGE_IN_AIR             = 4;
constexpr int DAMAGE_SUBCLASSES_PROTECT = 8;

// Flags for MorphActor.
constexpr int MRF_OLDEFFECTS        = 0x00000000;
constexpr int MRF_ADDSTAMINA        = 0x00000001;
constexpr int MRF_FULLHEALTH        = 0x00000002;
constexpr int MRF_UNDOBYTOMEOFPOWER = 0x00000004;
constexpr int MRF_UNDOBYCHAOSDEVICE = 0x00000008;
constexpr int MRF_FAILNOTELEFRAG    = 0x00000010;
constexpr int MRF_FAILNOLAUGH       = 0x00000020;
constexpr int MRF_WHENINVULNERABLE  = 0x00000040;
constexpr int MRF_LOSEACTUALWEAPON  = 0x00000080;
constexpr int MRF_NEWTIDBEHAVIOUR   = 0x00000100;
constexpr int MRF_UNDOBYDEATH       = 0x00000200;
constexpr int MRF_UNDOBYDEATHFORCED = 0x00000400;
constexpr int MRF_UNDOBYDEATHSAVES  = 0x00000800;

// Flags returned by ClassifyActor.
constexpr int ACTOR_NONE       =   0;
constexpr int ACTOR_WORLD      =   1;
constexpr int ACTOR_PLAYER     =   2;
constexpr int ACTOR_BOT        =   4;
constexpr int ACTOR_VOODOODOLL =   8;
constexpr int ACTOR_MONSTER    =  16;
constexpr int ACTOR_ALIVE      =  32;
constexpr int ACTOR_DEAD       =  64;
constexpr int ACTOR_MISSILE    = 128;
constexpr int ACTOR_GENERIC    = 256;

// Physical volumes for SoundSequenceOnSector.
constexpr int SECSEQ_FLOOR      = 1;
constexpr int SECSEQ_CEILING    = 2;
constexpr int SECSEQ_FULLHEIGHT = 3;
constexpr int SECSEQ_INTERIOR   = 4;

// Actor pointer selectors.
constexpr int AAPTR_DEFAULT                = 0x00000000;
constexpr int AAPTR_NULL                   = 0x00000001;
constexpr int AAPTR_TARGET                 = 0x00000002;
constexpr int AAPTR_MASTER                 = 0x00000004;
constexpr int AAPTR_TRACER                 = 0x00000008;
constexpr int AAPTR_PLAYER_GETTARGET       = 0x00000010;
constexpr int AAPTR_PLAYER_GETCONVERSATION = 0x00000020;
constexpr int AAPTR_PLAYER1                = 0x00000040;
constexpr int AAPTR_PLAYER2                = 0x00000080;
constexpr int AAPTR_PLAYER3                = 0x00000100;
constexpr int AAPTR_PLAYER4                = 0x00000200;
constexpr int AAPTR_PLAYER5                = 0x00000400;
constexpr int AAPTR_PLAYER6                = 0x00000800;
constexpr int AAPTR_PLAYER7                = 0x00001000;
constexpr int AAPTR_PLAYER8                = 0x00002000;
constexpr int AAPTR_FRIENDPLAYER           = 0x00004000;

// Actor pointer flags.
constexpr int PTROP_UNSAFETARGET = 1;
constexpr int PTROP_UNSAFEMASTER = 2;
constexpr int PTROP_NOSAFEGUARDS = PTROP_UNSAFETARGET|PTROP_UNSAFEMASTER;

// Skulltag teams.
constexpr int TEAM_BLUE = 0;
constexpr int TEAM_RED  = 1;
constexpr int NO_TEAM   = 2;

// Skulltag invasion states.
constexpr int IS_WAITINGFORPLAYERS = 0;
constexpr int IS_FIRSTCOUNTDOWN    = 1;
constexpr int IS_INPROGRESS        = 2;
constexpr int IS_BOSSFIGHT         = 3;
constexpr int IS_WAVECOMPLETE      = 4;
constexpr int IS_COUNTDOWN         = 5;

// Events when you have input grabbed.
constexpr int EV_KeyDown         =    1;
constexpr int EV_KeyRepeat       =    2;
constexpr int EV_KeyUp           =    3;
constexpr int EV_Char            =    4;
constexpr int EV_MouseMove       =    5;
constexpr int EV_LButtonDown     =    6;
constexpr int EV_LButtonUp       =    7;
constexpr int EV_LButtonDblClick =    8;
constexpr int EV_MButtonDown     =    9;
constexpr int EV_MButtonUp       =   10;
constexpr int EV_MButtonDblClick =   11;
constexpr int EV_RButtonDown     =   12;
constexpr int EV_RButtonUp       =   13;
constexpr int EV_RButtonDblClick =   14;
constexpr int EV_WheelDown       =   15;
constexpr int EV_WheelUp         =   16;
// Key modifiers (or'd with event type).
constexpr int GKM_SHIFT          =  256;
constexpr int GKM_CTRL           =  512;
constexpr int GKM_ALT            = 1024;
// Button modifiers are only valid for EV_MouseMove events.
constexpr int GKM_LBUTTON        = 2048;
constexpr int GKM_MBUTTON        = 4096;
constexpr int GKM_RBUTTON        = 8192;

// Special codes for some GUI keys, including a few real ASCII codes.
constexpr int GK_PGDN      =  1;
constexpr int GK_PGUP      =  2;
constexpr int GK_HOME      =  3;
constexpr int GK_END       =  4;
constexpr int GK_LEFT      =  5;
constexpr int GK_RIGHT     =  6;
constexpr int GK_ALERT     =  7;
constexpr int GK_BACKSPACE =  8;
constexpr int GK_TAB       =  9;
constexpr int GK_LINEFEED  = 10;
constexpr int GK_DOWN      = 10;
constexpr int GK_VTAB      = 11;
constexpr int GK_UP        = 11;
constexpr int GK_FORMFEED  = 12;
constexpr int GK_RETURN    = 13;
constexpr int GK_F1        = 14;
constexpr int GK_F2        = 15;
constexpr int GK_F3        = 16;
constexpr int GK_F4        = 17;
constexpr int GK_F5        = 18;
constexpr int GK_F6        = 19;
constexpr int GK_F7        = 20;
constexpr int GK_F8        = 21;
constexpr int GK_F9        = 22;
constexpr int GK_F10       = 23;
constexpr int GK_F11       = 24;
constexpr int GK_F12       = 25;
constexpr int GK_DEL       = 26;
constexpr int GK_ESCAPE    = 27;
constexpr int GK_FREE1     = 28;
constexpr int GK_FREE2     = 29;
constexpr int GK_FREE3     = 30;
constexpr int GK_CESCAPE   = 31;

constexpr int CHANGELEVEL_KEEPFACING     =  1;
constexpr int CHANGELEVEL_RESETINVENTORY =  2;
constexpr int CHANGELEVEL_NOMONSTERS     =  4;
constexpr int CHANGELEVEL_CHANGESKILL    =  8;
constexpr int CHANGELEVEL_NOINTERMISSION = 16;
constexpr int CHANGELEVEL_RESETHEALTH    = 32;

constexpr __fixed NO_CHANGE = 32767.0;

constexpr int SECF_SILENT          = 1;
constexpr int SECF_NOFALLINGDAMAGE = 2;
constexpr int SECF_FLOORDROP       = 4;
constexpr int SECF_NORESPAWN       = 8;

constexpr int BLOCKF_CREATURES   =   1;
constexpr int BLOCKF_MONSTERS    =   2;
constexpr int BLOCKF_PLAYERS     =   4;
constexpr int BLOCKF_FLOATERS    =   8;
constexpr int BLOCKF_PROJECTILES =  16;
constexpr int BLOCKF_EVERYTHING  =  32;
constexpr int BLOCKF_RAILING     =  64;
constexpr int BLOCKF_USE         = 128;
constexpr int BLOCKF_SIGHT       = 256;

constexpr int FOGP_DENSITY        = 0;
constexpr int FOGP_OUTSIDEDENSITY = 1;
constexpr int FOGP_SKYFOG         = 2;

constexpr int PRINTNAME_LEVELNAME = -1;
constexpr int PRINTNAME_LEVEL     = -2;
constexpr int PRINTNAME_SKILL     = -3;

constexpr int CSF_NOFAKEFLOORS = 1;
constexpr int CSF_NOBLOCKALL   = 2;

#endif//__HEADER__ZDEFS_DH__

