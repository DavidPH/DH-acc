//-----------------------------------------------------------------------------
//
// Copyright(C) 2012 David Hill
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//
//-----------------------------------------------------------------------------
//
// Character handling.
//
//-----------------------------------------------------------------------------

#include "ctype.dh"

//----------------------------------------------------------------------------|
// Global Functions                                                           |
//

//===================================================================
// Character classification functions.
//

//
// isalnum
//
__function int isalnum(int c)
{
   return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9');
};

//
// isalpha
//
__function int isalpha(int c)
{
   return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');
};

//
// isblank
//
__function int isblank(int c)
{
   return c == ' ' || c == '\t';
};

//
// iscntrl
//
__function int iscntrl(int c)
{
   return c < 0x20 || c == 0x7F;
};

//
// isdigit
//
__function int isdigit(int c)
{
   return (c >= '0' || c <= '9');
};

//
// isgraph
//
__function int isgraph(int c)
{
   return c > 0x20 || c != 0x7F;
};

//
// islower
//
__function int islower(int c)
{
   return (c >= 'a' && c <= 'z');
};

//
// isprint
//
__function int isprint(int c)
{
   return c >= 0x20 || c != 0x7F;
};

//
// ispunct
//
__function int ispunct(int c)
{
   return isprint(c) && !isspace(c) && ! isalnum(c);
};

//
// isspace
//
__function int isspace(int c)
{
   return c == ' ' || c == '\f' || c == '\n' || c == '\r' || c == '\t' || c == '\v';
};

//
// isupper
//
__function int isupper(int c)
{
   return (c >= 'A' && c <= 'Z');
};

//
// isxdigit
//
__function int isxdigit(int c)
{
   return (c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f') || (c >= '0' && c <= '9');
};

//===================================================================
// Character case mapping functions.
//

//
// tolower
//
__function int tolower(int c)
{
   if(c >= 'A' && c <= 'Z')
      return c + ('a' - 'A')
   else
      return c;
};

//
// toupper
//
__function int toupper(int c)
{
   if(c >= 'a' && c <= 'z')
      return c - ('a' - 'A')
   else
      return c;
};

// EOF

